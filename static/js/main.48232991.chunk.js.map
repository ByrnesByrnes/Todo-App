{"version":3,"sources":["components/TodoForm.js","components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","onSubmit","todos","edit","date","useState","input","setInput","error","setError","dateHour","getHours","dateMinutes","getMinutes","todoDateAdded","focus","useRef","useEffect","current","console","log","className","event","preventDefault","length","id","text","completed","remove","appear","type","placeholder","value","onChange","target","name","ref","Todo","completeTodo","removeTodo","fadeTodo","editTodo","amPm","setEdit","submitEdit","map","todo","style","border","onClick","TodoList","savedTodos","JSON","parse","localStorage","getItem","setTodos","setItem","stringify","Date","getMonth","getDate","getFullYear","updatedTodos","setTimeout","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48232991.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n\r\n\r\nexport default function TodoForm({onSubmit, todos, edit, date}) {\r\n    const [input, setInput] = useState('')\r\n    const [error, setError] = useState('')\r\n\r\n    const dateHour = date.getHours() < 12 ? date.getHours() : date.getHours() - 12\r\n    const dateMinutes = date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes()\r\n    const todoDateAdded = ` ${dateHour}:${dateMinutes}`\r\n\r\n\r\n    const focus = useRef(null)\r\n\r\n    useEffect(() => {\r\n        focus.current.focus()\r\n    },[])\r\n\r\n    console.log(todos)\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n        if(input.length> 0) {\r\n            onSubmit({\r\n                id: todos.length > 0 ? todos[0].id + 1 : 1,\r\n                text: input,\r\n                completed: false,\r\n                remove: false,\r\n                appear: true,\r\n                date: todoDateAdded\r\n            })\r\n            setInput('')\r\n            setError('')\r\n        } else {\r\n            setError('Too Short')\r\n        }\r\n        setInput('')\r\n    }\r\n    \r\n    return (\r\n        <form className={`todo-form ${edit && 'edit'}`} onSubmit={handleSubmit} >\r\n            <input \r\n                className={`todo-input ${edit && 'edit'}`} \r\n                type=\"text\" \r\n                placeholder={!edit ? 'Add a Todo' : edit.value}\r\n                onChange={(event) => setInput(event.target.value)}\r\n                value={input} name=\"text\"\r\n                ref={focus}\r\n            />\r\n            <button className={`todo-button ${edit && 'edit'}`}  >{!edit ? 'Add Todo' : 'Update'}</button>\r\n            {error && <span className=\"todo-error\">{error}</span>}\r\n        </form>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { RiCloseCircleLine } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\nimport { IoMdCheckmarkCircleOutline } from 'react-icons/io'\r\nimport { BsBoxArrowInDown } from 'react-icons/bs'\r\n\r\nimport TodoForm from './TodoForm'\r\n\r\n\r\nexport default function Todo({ todos, completeTodo, removeTodo, fadeTodo, editTodo, date}) {\r\n    //add Modal for update\r\n    //add Drop down\r\n    const [showInfo, setShowInfo] = useState('')\r\n\r\n    const amPm = date.getHours() < 12 ? 'am' : 'pm'\r\n    const [edit, setEdit] = useState({})\r\n   \r\n    const submitEdit = value => {\r\n        editTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n   \r\n    return (\r\n        todos.map(todo => (\r\n        <div \r\n            key={todo.id} \r\n            className={\r\n                `todo-row \r\n                ${todo.completed && 'complete'} \r\n                ${todo.remove && \"remove\" }`\r\n            }\r\n        style={{border: edit.id === todo.id ? 'none' : '1px solid rgba(221,221,221, .9)'}}\r\n        >\r\n\r\n        {edit.id === todo.id  && \r\n                <TodoForm \r\n                    edit={edit} \r\n                    onSubmit={submitEdit} \r\n                    todos={todos} \r\n                    date={date}\r\n                />\r\n        }\r\n\r\n        <div className=\"todo-row-main\">\r\n        <div className=\"todo-text\">\r\n            <p>{todo.text}</p>\r\n            <span className=\"info-icon\">\r\n                {/* <BsBoxArrowInDown onClick={() => setShowInfo(todo)}/> */}\r\n            </span>\r\n        </div>\r\n            <p className=\"todo-date\">{todo.date}{amPm}</p>\r\n        </div>\r\n            <div className=\"icons\" >\r\n                <IoMdCheckmarkCircleOutline\r\n                    className=\"completed-icon\"    \r\n                    onClick={() => completeTodo(todo.id)}\r\n                    />\r\n                <RiCloseCircleLine\r\n                    className={`delete-icon`}\r\n                    onClick={() => {\r\n                        fadeTodo(todo.id)\r\n                        removeTodo(todo.id)\r\n                    }}\r\n                />\r\n                <TiEdit\r\n                    className={`${!todo.completed ? 'edit-icon': 'disabled'}`}\r\n                    onClick={() => !todo.completed && setEdit({id: todo.id, value: todo.text})}\r\n                />\r\n            </div>\r\n        </div>\r\n    )))\r\n}\r\n","import React, {useState} from 'react';\r\nimport TodoForm from './TodoForm'\r\nimport TodoItem from './TodoItem'\r\n\r\nexport default function TodoList({edit}) {\r\n    const savedTodos = JSON.parse(localStorage.getItem('todos'))\r\n    const [todos, setTodos] = useState(savedTodos || [])\r\n    console.log(edit, 'unde')\r\n    localStorage.setItem('todos', JSON.stringify(todos))\r\n\r\n    const addTodo = todo => {\r\n        setTodos([todo,...todos])\r\n    }   \r\n\r\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    \r\n    const date = new Date()\r\n\r\n    const editTodo = (id, value) => {\r\n        const updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                return {\r\n                    ...todo,\r\n                    text: value.text\r\n                }\r\n            }\r\n            return todo\r\n        })\r\n        return setTodos(updatedTodos)\r\n        // setTodos(prev => {prev.map(todo => todo.id === id ? value : todo)})\r\n    }\r\n\r\n    const completeTodo = (id) => {\r\n        const updatedTodos = todos.map(todo => {\r\n            if(todo.id === id) {\r\n                return {\r\n                    ...todo,\r\n                    completed: !todo.completed\r\n                }\r\n            }\r\n            return todo\r\n        })\r\n        return setTodos(updatedTodos)\r\n    }\r\n\r\n    const removeTodo = (id) => {\r\n        setTimeout(() => {\r\n            const updatedTodos = todos.filter(todo => todo.id !== id && todo)\r\n            return setTodos(updatedTodos)\r\n        },200)\r\n    }\r\n    const fadeTodo = (id) => {\r\n        const updatedTodos = todos.map(todo => {\r\n            if(todo.id === id) {\r\n                return {\r\n                    ...todo,\r\n                    remove: true\r\n                }\r\n            }\r\n            return todo\r\n        })\r\n        return setTodos(updatedTodos)\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            <div className=\"todo-list-title\">\r\n                <h1>Let's Plan</h1>\r\n                <h4>{months[date.getMonth()]},{date.getDate()},{date.getFullYear()}</h4>\r\n            </div>\r\n            <TodoForm \r\n                edit={edit}\r\n                onSubmit={addTodo} \r\n                todos={todos}\r\n                date={date}\r\n            />\r\n            <div className=\"todos-container\" id=\"todos-container\">\r\n                {todos.length < 1 ?\r\n                <div className=\"todo-empty\">\r\n                    <h2>Lets add a Todo!</h2>\r\n                </div>:\r\n                    <TodoItem \r\n                        todos={todos} \r\n                        completeTodo={completeTodo} \r\n                        removeTodo={removeTodo}\r\n                        editTodo={editTodo}\r\n                        fadeTodo={fadeTodo}\r\n                        date={date}                        \r\n                    />}\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}","import './App.css';\nimport TodoList from './components/TodoList'\n\n\nfunction App() {\n\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}